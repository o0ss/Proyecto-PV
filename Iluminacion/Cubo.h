float vertices[] = {

	//Posicion            //Normal
	-0.5f, -0.5f, -0.5f,  0.0f,  0.0f, -1.0f,	0.0f, 0.0f,
	 0.5f, -0.5f, -0.5f,  0.0f,  0.0f, -1.0f,	1.0f, 0.0f,
	 0.5f,  0.5f, -0.5f,  0.0f,  0.0f, -1.0f,	1.0f, 1.0f,
	-0.5f,  0.5f, -0.5f,  0.0f,  0.0f, -1.0f,	0.0f, 1.0f,

	-0.5f, -0.5f,  0.5f,  0.0f,  0.0f,  1.0f,	0.0f, 0.0f,
	 0.5f, -0.5f,  0.5f,  0.0f,  0.0f,  1.0f,	1.0f, 0.0f,
	 0.5f,  0.5f,  0.5f,  0.0f,  0.0f,  1.0f,	1.0f, 1.0f,
	-0.5f,  0.5f,  0.5f,  0.0f,  0.0f,  1.0f,	0.0f, 1.0f,

	-0.5f,  0.5f,  0.5f, -1.0f,  0.0f,  0.0f,	0.0f, 0.0f,
	-0.5f,  0.5f, -0.5f, -1.0f,  0.0f,  0.0f,	1.0f, 0.0f,
	-0.5f, -0.5f, -0.5f, -1.0f,  0.0f,  0.0f,	1.0f, 1.0f,
	-0.5f, -0.5f,  0.5f, -1.0f,  0.0f,  0.0f,	0.0f, 1.0f,

	 0.5f,  0.5f,  0.5f,  1.0f,  0.0f,  0.0f,	0.0f, 0.0f,
	 0.5f,  0.5f, -0.5f,  1.0f,  0.0f,  0.0f,	1.0f, 0.0f,
	 0.5f, -0.5f, -0.5f,  1.0f,  0.0f,  0.0f,	1.0f, 1.0f,
	 0.5f, -0.5f,  0.5f,  1.0f,  0.0f,  0.0f,	0.0f, 1.0f,

	-0.5f, -0.5f, -0.5f,  0.0f, -1.0f,  0.0f,	0.0f, 0.0f,
	 0.5f, -0.5f, -0.5f,  0.0f, -1.0f,  0.0f,	1.0f, 0.0f,
	 0.5f, -0.5f,  0.5f,  0.0f, -1.0f,  0.0f,	1.0f, 1.0f,
	-0.5f, -0.5f,  0.5f,  0.0f, -1.0f,  0.0f,	0.0f, 1.0f,

	-0.5f,  0.5f, -0.5f,  0.0f,  1.0f,  0.0f,	0.0f, 0.0f,
	 0.5f,  0.5f, -0.5f,  0.0f,  1.0f,  0.0f,	1.0f, 0.0f,
	 0.5f,  0.5f,  0.5f,  0.0f,  1.0f,  0.0f,	1.0f, 1.0f,
	-0.5f,  0.5f,  0.5f,  0.0f,  1.0f,  0.0f,	0.0f, 1.0f,
};

float vertices2[] = {

	//Posicion            //Normal				//Textura
	-7.5f, -7.5f, -0.5f,  0.0f,  0.0f, -1.0f,	0.0f, 0.0f,
	 7.5f, -7.5f, -0.5f,  0.0f,  0.0f, -1.0f,	1.0f, 0.0f,
	 7.5f,  7.5f, -0.5f,  0.0f,  0.0f, -1.0f,	1.0f, 1.0f,
	-7.5f,  7.5f, -0.5f,  0.0f,  0.0f, -1.0f,	0.0f, 1.0f,

	-7.5f, -7.5f,  0.5f,  0.0f,  0.0f,  1.0f,	0.0f, 0.0f,
	 7.5f, -7.5f,  0.5f,  0.0f,  0.0f,  1.0f,	1.0f, 0.0f,
	 7.5f,  7.5f,  0.5f,  0.0f,  0.0f,  1.0f,	1.0f, 1.0f,
	-7.5f,  7.5f,  0.5f,  0.0f,  0.0f,  1.0f,	0.0f, 1.0f,

	-7.5f,  7.5f,  0.5f, -1.0f,  0.0f,  0.0f,	0.0f, 0.0f,
	-7.5f,  7.5f, -0.5f, -1.0f,  0.0f,  0.0f,	1.0f, 0.0f,
	-7.5f, -7.5f, -0.5f, -1.0f,  0.0f,  0.0f,	1.0f, 1.0f,
	-7.5f, -7.5f,  0.5f, -1.0f,  0.0f,  0.0f,	0.0f, 1.0f,

	 7.5f,  7.5f,  0.5f,  1.0f,  0.0f,  0.0f,	0.0f, 0.0f,
	 7.5f,  7.5f, -0.5f,  1.0f,  0.0f,  0.0f,	1.0f, 0.0f,
	 7.5f, -7.5f, -0.5f,  1.0f,  0.0f,  0.0f,	1.0f, 1.0f,
	 7.5f, -7.5f,  0.5f,  1.0f,  0.0f,  0.0f,	0.0f, 1.0f,

	-7.5f, -7.5f, -0.5f,  0.0f, -1.0f,  0.0f,	0.0f, 0.0f,
	 7.5f, -7.5f, -0.5f,  0.0f, -1.0f,  0.0f,	1.0f, 0.0f,
	 7.5f, -7.5f,  0.5f,  0.0f, -1.0f,  0.0f,	1.0f, 1.0f,
	-7.5f, -7.5f,  0.5f,  0.0f, -1.0f,  0.0f,	0.0f, 1.0f,

	-7.5f,  7.5f, -0.5f,  0.0f,  1.0f,  0.0f,	0.0f, 0.0f,
	 7.5f,  7.5f, -0.5f,  0.0f,  1.0f,  0.0f,	1.0f, 0.0f,
	 7.5f,  7.5f,  0.5f,  0.0f,  1.0f,  0.0f,	1.0f, 1.0f,
	-7.5f,  7.5f,  0.5f,  0.0f,  1.0f,  0.0f,	0.0f, 1.0f,
};

float vertices3[] = {

	//Posicion            //Normal
	-0.4f, -0.4f, -0.4f,  0.0f,  0.0f, -1.0f,	0.0f, 0.0f,
	 0.4f, -0.4f, -0.4f,  0.0f,  0.0f, -1.0f,	1.0f, 0.0f,
	 0.4f,  0.4f, -0.4f,  0.0f,  0.0f, -1.0f,	1.0f, 1.0f,
	-0.4f,  0.4f, -0.4f,  0.0f,  0.0f, -1.0f,	0.0f, 1.0f,

	-0.4f, -0.4f,  0.4f,  0.0f,  0.0f,  1.0f,	0.0f, 0.0f,
	 0.4f, -0.4f,  0.4f,  0.0f,  0.0f,  1.0f,	1.0f, 0.0f,
	 0.4f,  0.4f,  0.4f,  0.0f,  0.0f,  1.0f,	1.0f, 1.0f,
	-0.4f,  0.4f,  0.4f,  0.0f,  0.0f,  1.0f,	0.0f, 1.0f,

	-0.4f,  0.4f,  0.4f, -1.0f,  0.0f,  0.0f,	0.0f, 0.0f,
	-0.4f,  0.4f, -0.4f, -1.0f,  0.0f,  0.0f,	1.0f, 0.0f,
	-0.4f, -0.4f, -0.4f, -1.0f,  0.0f,  0.0f,	1.0f, 1.0f,
	-0.4f, -0.4f,  0.4f, -1.0f,  0.0f,  0.0f,	0.0f, 1.0f,

	 0.4f,  0.4f,  0.4f,  1.0f,  0.0f,  0.0f,	0.0f, 0.0f,
	 0.4f,  0.4f, -0.4f,  1.0f,  0.0f,  0.0f,	1.0f, 0.0f,
	 0.4f, -0.4f, -0.4f,  1.0f,  0.0f,  0.0f,	1.0f, 1.0f,
	 0.4f, -0.4f,  0.4f,  1.0f,  0.0f,  0.0f,	0.0f, 1.0f,

	-0.4f, -0.4f, -0.4f,  0.0f, -1.0f,  0.0f,	0.0f, 0.0f,
	 0.4f, -0.4f, -0.4f,  0.0f, -1.0f,  0.0f,	1.0f, 0.0f,
	 0.4f, -0.4f,  0.4f,  0.0f, -1.0f,  0.0f,	1.0f, 1.0f,
	-0.4f, -0.4f,  0.4f,  0.0f, -1.0f,  0.0f,	0.0f, 1.0f,

	-0.4f,  0.4f, -0.4f,  0.0f,  1.0f,  0.0f,	0.0f, 0.0f,
	 0.4f,  0.4f, -0.4f,  0.0f,  1.0f,  0.0f,	1.0f, 0.0f,
	 0.4f,  0.4f,  0.4f,  0.0f,  1.0f,  0.0f,	1.0f, 1.0f,
	-0.4f,  0.4f,  0.4f,  0.0f,  1.0f,  0.0f,	0.0f, 1.0f,
};

unsigned int indices[] = {
	0,1,2, 
	2,3,0,
	
	4,5,6,
	6,7,4,
	
	8,9,10,
	10,11,8,
	
	12,13,14,
	14,15,12,

	16,17,18,
	18,19,16,
	
	20,21,22,
	22,23,20
};

unsigned int indices2[] = {
	0,1,2,
	2,3,0,

	4,5,6,
	6,7,4,

	8,9,10,
	10,11,8,

	12,13,14,
	14,15,12,

	16,17,18,
	18,19,16,

	20,21,22,
	22,23,20
};

unsigned int indices3[] = {
	0,1,2,
	2,3,0,

	4,5,6,
	6,7,4,

	8,9,10,
	10,11,8,

	12,13,14,
	14,15,12,

	16,17,18,
	18,19,16,

	20,21,22,
	22,23,20
};

vec3 posCube[] = {
	//Marco Derecho
	vec3(-7.0, 0.0, 0.0),
	vec3(-7.0, 1.0, 0.0),
	vec3(-7.0, 2.0, 0.0),
	vec3(-7.0, 3.0, 0.0),
	vec3(-7.0, 4.0, 0.0),
	vec3(-7.0, 5.0, 0.0),
	vec3(-7.0, 6.0, 0.0),
	vec3(-7.0, 7.0, 0.0),
	vec3(-7.0, -1.0, 0.0),
	vec3(-7.0, -2.0, 0.0),
	vec3(-7.0, -3.0, 0.0),
	vec3(-7.0, -4.0, 0.0),
	vec3(-7.0, -5.0, 0.0),
	vec3(-7.0, -6.0, 0.0),
	vec3(-7.0, -7.0, 0.0),
	//Marco Abajo
	vec3(6.0, -7.0, 0.0),
	vec3(5.0, -7.0, 0.0),
	vec3(4.0, -7.0, 0.0),
	vec3(3.0, -7.0, 0.0),
	vec3(2.0, -7.0, 0.0),
	vec3(1.0, -7.0, 0.0),
	vec3(-1.0, -7.0, 0.0),
	vec3(-2.0, -7.0, 0.0),
	vec3(-3.0, -7.0, 0.0),
	vec3(-4.0, -7.0, 0.0),
	vec3(-5.0, -7.0, 0.0),
	vec3(-6.0, -7.0, 0.0),
	//Marco Izquierdo
	vec3(7.0, 0.0, 0.0),
	vec3(7.0, 1.0, 0.0),
	vec3(7.0, 2.0, 0.0),
	vec3(7.0, 3.0, 0.0),
	vec3(7.0, 4.0, 0.0),
	vec3(7.0, 5.0, 0.0),
	vec3(7.0, 6.0, 0.0),
	vec3(7.0, 7.0, 0.0),
	vec3(7.0, -1.0, 0.0),
	vec3(7.0, -2.0, 0.0),
	vec3(7.0, -3.0, 0.0),
	vec3(7.0, -4.0, 0.0),
	vec3(7.0, -5.0, 0.0),
	vec3(7.0, -6.0, 0.0),
	vec3(7.0, -7.0, 0.0),
	//Marco Arriba
	vec3(6.0, 7.0, 0.0),
	vec3(5.0, 7.0, 0.0),
	vec3(4.0, 7.0, 0.0),
	vec3(3.0, 7.0, 0.0),
	vec3(2.0, 7.0, 0.0),
	vec3(1.0, 7.0, 0.0),
	vec3(0.0, 7.0, 0.0),
	vec3(-1.0, 7.0, 0.0),
	vec3(-3.0, 7.0, 0.0),
	vec3(-4.0, 7.0, 0.0),
	vec3(-5.0, 7.0, 0.0),
	vec3(-6.0, 7.0, 0.0),
	//Paredes laberinto
	//F1
	vec3(-1.0, -6.0, 0.0),
	vec3(1.0, -6.0, 0.0),
	//F2
	vec3(-5.0, -5.0, 0.0),
	vec3(-4.0, -5.0, 0.0),
	vec3(-3.0, -5.0, 0.0),
	vec3(-1.0, -5.0, 0.0),
	vec3(1.0, -5.0, 0.0),
	vec3(3.0, -5.0, 0.0),
	vec3(5.0, -5.0, 0.0),
	vec3(6.0, -5.0, 0.0),
	//F3
	vec3(-5.0, -4.0, 0.0),
	vec3(-3.0, -4.0, 0.0),
	vec3(1.0, -4.0, 0.0),
	vec3(3.0, -4.0, 0.0),
	//F4
	vec3(-5.0, -3.0, 0.0),
	vec3(-3.0, -3.0, 0.0),
	vec3(-2.0, -3.0, 0.0),
	vec3(-1.0, -3.0, 0.0),
	vec3(1.0, -3.0, 0.0),
	vec3(3.0, -3.0, 0.0),
	vec3(4.0, -3.0, 0.0),
	vec3(5.0, -3.0, 0.0),
	//F5
	vec3(5.0, -2.0, 0.0),
	//F6
	vec3(-6.0, -1.0, 0.0),
	vec3(-5.0, -1.0, 0.0),
	vec3(-4.0, -1.0, 0.0),
	vec3(-2.0, -1.0, 0.0),
	vec3(-1.0, -1.0, 0.0),
	vec3(0.0, -1.0, 0.0),
	vec3(1.0, -1.0, 0.0),
	vec3(3.0, -1.0, 0.0),
	vec3(5.0, -1.0, 0.0),
	//F7
	vec3(3.0, 0.0, 0.0),
	vec3(5.0, -1.0, 0.0),
	//F8
	vec3(-6.0, 1.0, 0.0),
	vec3(-4.0, 1.0, 0.0),
	vec3(-3.0, 1.0, 0.0),
	vec3(-2.0, 1.0, 0.0),
	vec3(-1.0, 1.0, 0.0),
	vec3(0.0, 1.0, 0.0),
	vec3(1.0, 1.0, 0.0),
	vec3(2.0, 1.0, 0.0),
	vec3(3.0, 1.0, 0.0),
	vec3(5.0, 1.0, 0.0),
	//F9
	vec3(-4.0, 2.0, 0.0),
	vec3(5.0, 2.0, 0.0),
	//F10
	vec3(-5.0, 3.0, 0.0),
	vec3(-4.0, 3.0, 0.0),
	vec3(-2.0, 3.0, 0.0),
	vec3(-1.0, 3.0, 0.0),
	vec3(0.0, 3.0, 0.0),
	vec3(1.0, 3.0, 0.0),
	vec3(2.0, 3.0, 0.0),
	vec3(3.0, 3.0, 0.0),
	vec3(4.0, 3.0, 0.0),
	vec3(5.0, 3.0, 0.0),
	//F11
	vec3(-4.0, 4.0, 0.0),
	vec3(2.0, 4.0, 0.0),
	//F12
	vec3(-6.0, 5.0, 0.0),
	vec3(-4.0, 5.0, 0.0),
	vec3(-3.0, 5.0, 0.0),
	vec3(-2.0, 5.0, 0.0),
	vec3(-1.0, 5.0, 0.0),
	vec3(0.0, 5.0, 0.0),
	vec3(2.0, 5.0, 0.0),
	vec3(3.0, 5.0, 0.0),
	vec3(4.0, 5.0, 0.0),
	vec3(6.0, 5.0, 0.0),
	//F13
	vec3(2.0, 6.0, 0.0),

	//Entrada y Salida
	vec3(-2.0, 7.0, 0.0),
	vec3(0.0, -7.0, 0.0)
};

vec3 posCube2[] = {
	//Piso
	vec3(0.0, 0.0, -1.0)
};

vec3 posCube3[] = {
	//Piso
	vec3(0.0, -6.0, 20.0)
};

vec3 posTriggerF[] = {
	vec3(-2.0, 7.0, 0.0)
};

vec3 posCubeLight[] = {
	vec3(0.0, 0.0, 190.0),
	
};

// gravedad
vec3 cuboVel = vec3(0.0f, 0.0f, 0.0f);
float gravedad = -9.81f;

//vec3(0.0, 2.0, 1.0),
	//vec3(0.0,-2.0, 0.0),
	//vec3(-2.0, 0.0, 1.0),
	//vec3(2.0, 0.0, 0.0)
